<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
	<TriggerPackage>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>shipRadar</name>
			<script>triggerShipRadar()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>^(?&lt;ship_line&gt;(?&lt;ship_type&gt;[a-zA-Z0-9 \-]+) \'(?&lt;ship_name&gt;[a-zA-Z0-9 ]+)\'[\s]+(?&lt;ship_x&gt;[0-9\-]+) (?&lt;ship_y&gt;[0-9\-]+) (?&lt;ship_z&gt;[0-9\-]+))$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>projectileRadar</name>
			<script>triggerProjectileRadar()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>^(?&lt;ship_line&gt;(?&lt;ship_name&gt;(A Heavy Rocket|A Concussion Missile|A Torpedo))(?&lt;incoming&gt; \(Incoming\))?[\s]+(?&lt;ship_x&gt;[0-9\-]+) (?&lt;ship_y&gt;[0-9\-]+) (?&lt;ship_z&gt;[0-9\-]+))$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>fleetRadar</name>
			<script>triggerFleetRadar()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>^L\[((?&lt;ship_leader_type&gt;[a-zA-Z0-9 \-]+) \'(?&lt;ship_leader_name&gt;[a-zA-Z0-9 ]+)\'|(Unknown) |(None    )|[\s]+)\]:P\[(?&lt;ship_position&gt;[a-zA-Z]+)*[\s]*\] (?&lt;ship_line&gt;(?&lt;ship_type&gt;[a-zA-Z0-9 \-]+) \'(?&lt;ship_name&gt;[a-zA-Z0-9 ]+)\'[\s]+(?&lt;ship_x&gt;[0-9\-]+) (?&lt;ship_y&gt;[0-9\-]+) (?&lt;ship_z&gt;[0-9\-]+))$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>shipProximity</name>
			<script>triggerShipProximity()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>^(?&lt;ship_type&gt;[a-zA-Z0-9 \-]+) \'(?&lt;ship_name&gt;[a-zA-Z0-9 ]+)\'[\s]+Prox: (?&lt;ship_proximity&gt;[0-9]+)$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>projectileProximity</name>
			<script>triggerProjectileProximity()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>^(?&lt;ship_name&gt;(A Heavy Rocket|A Concussion Missile|A Torpedo))(?&lt;incoming&gt; \(Incoming\))?[\s]+Prox: (?&lt;ship_proximity&gt;[0-9]+)$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>shipVelocity</name>
			<script>triggerShipVelocity()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>^(?&lt;ship_type&gt;[a-zA-Z0-9 \-]+) \'(?&lt;ship_name&gt;[a-zA-Z0-9 ]+)\'[\s]+Velocity: (?&lt;ship_velocity&gt;[0-9]+)$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>projectileVelocity</name>
			<script>triggerProjectileVelocity()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>^(?&lt;ship_name&gt;(A Heavy Rocket|A Concussion Missile|A Torpedo))(?&lt;incoming&gt; \(Incoming\))?[\s]+Velocity: (?&lt;ship_velocity&gt;[0-9]+)$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>myCoordinates</name>
			<script>triggerMyCoordinates()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>^Your Coordinates: (?&lt;my_x&gt;[0-9 \-]+) (?&lt;my_y&gt;[0-9 \-]+) (?&lt;my_z&gt;[0-9 \-]+)$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>shipLaunch</name>
			<script>triggerShipLaunch()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>^(?&lt;ship_type&gt;[a-zA-Z0-9 \-]+) \'(?&lt;ship_name&gt;[a-zA-Z0-9 ]+)\' launches from the surface of [a-z A-Z]+, entering the starsystem at (?&lt;ship_x&gt;[0-9\-]+) (matches?&lt;ship_y&gt;[0-9\-]+) (?&lt;ship_z&gt;[0-9\-]+)$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>shipEntersSystem</name>
			<script>triggerShipEntersSystem()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>^(?&lt;ship_type&gt;[a-zA-Z0-9 \-]+) \'(?&lt;ship_name&gt;[a-zA-Z0-9 ]+)\' enters the starsystem, coming out of its hyperjump at (?&lt;ship_x&gt;[0-9\-]+) (?&lt;ship_y&gt;[0-9\-]+) (?&lt;ship_z&gt;[0-9\-]+)$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>shipLand</name>
			<script>triggerShipLand()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>^(?&lt;ship_type&gt;[a-zA-Z0-9 \-]+) \'(?&lt;ship_name&gt;[a-zA-Z0-9 ]+)\' lands on the surface of [0-9a-z A-Z\-]+, disappearing from your scanner.$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>shipLeavesSystem</name>
			<script>triggerShipLeavesSystem()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>^(?&lt;ship_type&gt;[a-zA-Z0-9 \-]+) \'(?&lt;ship_name&gt;[a-zA-Z0-9 ]+)\'s hyperdrive engines flare as it initiates a hyperjump, disappearing into the distance as a streak of light.$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>shipExplodes</name>
			<script>triggerShipExplodes()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>^(?&lt;ship_type&gt;[a-zA-Z0-9 \-]+) \'(?&lt;ship_name&gt;[a-zA-Z0-9 ]+)\' explodes in a blinding flash of light!$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>shipTractored</name>
			<script>triggerShipTractored()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>^(?&lt;ship_type&gt;[a-zA-Z0-9 \-]+) \'(?&lt;ship_name&gt;[a-zA-Z0-9 ]+)\' is pulled into a hangar on (?&lt;ship_leader_type&gt;[a-zA-Z0-9 \-]+) \'(?&lt;ship_leader_name&gt;[a-zA-Z0-9 ]+)\', disappearing from your scanner.$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>shipHangarLaunch</name>
			<script>triggerShipHangarLaunch()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>^(?&lt;ship_type&gt;[a-zA-Z0-9 \-]+) \'(?&lt;ship_name&gt;[a-zA-Z0-9 ]+)\' launches from a hangar on (?&lt;ship_leader_type&gt;[a-zA-Z0-9 \-]+) \'(?&lt;ship_leader_name&gt;[a-zA-Z0-9 ]+)\', entering the starsystem at (?&lt;ship_x&gt;[0-9\-]+) (?&lt;ship_y&gt;[0-9\-]+) (?&lt;ship_z&gt;[0-9\-]+)$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>shipHangarLand</name>
			<script>triggerShipHangarLand()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>^(?&lt;ship_type&gt;[a-zA-Z0-9 \-]+) \'(?&lt;ship_name&gt;[a-zA-Z0-9 ]+)\' lands in a hangar on (?&lt;ship_leader_type&gt;[a-zA-Z0-9 \-]+) \'(?&lt;ship_leader_name&gt;[a-zA-Z0-9 ]+)\', disappearing from your scanner.$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>shipDisappears</name>
			<script>triggerShipDisappears()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>(?&lt;ship_type&gt;[a-zA-Z0-9 \-]+) \'(?&lt;ship_name&gt;[a-zA-Z0-9 ]+)\' disappears from your scanner.$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>enterHyperspace</name>
			<script>triggerEnterHyperspace()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>^The ship lurches slightly as it makes the jump to lightspeed.$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>exitHyperspace</name>
			<script>triggerExitHyperspace()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>^The ship lurches slightly as it comes out of hyperspace.$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>myShipLands</name>
			<script>triggerMyShipLands()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>^Landing sequence complete.$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>myShipReadout</name>
			<script>triggerMyShipReadout()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>^Speed: (?&lt;ship_speed&gt;[0-9]+)  Fuel Level: (?&lt;ship_fuel&gt;[0-9]+)%  Coords: (?&lt;ship_x&gt;[0-9\-]+) (?&lt;ship_y&gt;[0-9\-]+) (?&lt;ship_z&gt;[0-9\-]+)$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>proximityAlert</name>
			<script>triggerProximityAlert()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>^    Proximity alert: (?&lt;ship_type&gt;[a-zA-Z0-9 \-]+) \'(?&lt;ship_name&gt;[a-zA-Z0-9 ]+)\'  (?&lt;ship_x&gt;[0-9\-]+) (?&lt;ship_y&gt;[0-9\-]+) (?&lt;ship_z&gt;[0-9\-]+)$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
		<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>myShipLaunch</name>
			<script>triggerMyShipLaunch()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>^Launch complete.$</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>1</integer>
			</regexCodePropertyList>
		</Trigger>
	</TriggerPackage>
	<TimerPackage />
	<AliasPackage>
		<Alias isActive="yes" isFolder="no">
			<name>dumpShips</name>
			<script>dumpShips()</script>
			<command></command>
			<packageName></packageName>
			<regex>dumpships</regex>
		</Alias>
		<Alias isActive="yes" isFolder="no">
			<name>debug</name>
			<script>setDebug()</script>
			<command></command>
			<packageName></packageName>
			<regex>^spacedebug ([0-1])$</regex>
		</Alias>
		<Alias isActive="yes" isFolder="no">
			<name>hideSpace</name>
			<script>hideSpace()</script>
			<command></command>
			<packageName></packageName>
			<regex>hidespace</regex>
		</Alias>
		<Alias isActive="yes" isFolder="no">
			<name>showSpace</name>
			<script>showSpace()</script>
			<command></command>
			<packageName></packageName>
			<regex>showspace</regex>
		</Alias>
		<Alias isActive="yes" isFolder="no">
			<name>clearShips</name>
			<script>clearShips()</script>
			<command></command>
			<packageName></packageName>
			<regex>clearships</regex>
		</Alias>
		<Alias isActive="yes" isFolder="no">
			<name>help</name>
			<script>help()</script>
			<command></command>
			<packageName></packageName>
			<regex>helpspace</regex>
		</Alias>
	</AliasPackage>
	<ActionPackage />
	<ScriptPackage>
		<Script isActive="yes" isFolder="no">
			<name>functions</name>
			<packageName></packageName>
			<script>function help()
  decho([[
` _________                           ___ ___           .___
 /   _____/__________    ____  ____  /   |   \ __ __  __| _/
 \_____  \\____ \__  \ _/ ___\/ __ \/    ~    \  |  \/ __ | 
 /        \  |_&gt; &gt; __ \\  \__\  ___/\    Y    /  |  / /_/ | 
/_______  /   __(____  /\___  &gt;___  &gt;\___|_  /|____/\____ | 
        \/|__|       \/     \/    \/       \/            \/ 
                    A Mudlet plugin for Legends of the Jedi
                                        Created By: Xavious
-----------------------------------------------------------
                     STANDARD COMMANDS
-----------------------------------------------------------
helpspace            - Display this help screen
hidespace            - Hide the mini window
showspace            - Show the mini window
-----------------------------------------------------------
                     MOUSE INTERACTIONS
-----------------------------------------------------------
left+click fields    - Sort ships by Type, Name, Proximity,
                     - Position, or Velocity

right+click ships    - Contextually status, target, locate, 
                     - or jump to a target ship
-----------------------------------------------------------
                    DEBUGGING COMMANDS
-----------------------------------------------------------
dumpships            - Print ship tables
clearships           - Purge the ships tables
spacedebug &lt;1/0&gt;     - Turn debugging on (1) or off (0)
-----------------------------------------------------------
  ]])
end

function showSpace()
  spacehud.container:show()
end

function hideSpace()
  spacehud.container:hide()
end

function clickSettings()
  debug("clickSettings")
  spacehud.settings_container:show()
  spacehud.input.type:print(spacehud.type_width)
  spacehud.input.name:print(spacehud.name_width)
  spacehud.input.xyz:print(spacehud.xyz_width)
  spacehud.input.proximity:print(spacehud.proximity_width)
  spacehud.input.position:print(spacehud.position_width)
  spacehud.input.velocity:print(spacehud.velocity_width)
end

function clickSave()
  debug("clickSave")
  spacehud.type_width = spacehud.input.type:getText()
  spacehud.name_width = spacehud.input.name:getText()
  spacehud.xyz_width = spacehud.input.xyz:getText()
  spacehud.proximity_width = spacehud.input.proximity:getText()
  spacehud.position_width = spacehud.input.position:getText()
  spacehud.velocity_width = spacehud.input.velocity:getText()
  spacehud.settings_container:hide()
  updateHud()
end

function setDebug()
  spacehud.debug = tonumber(matches[2])
  if spacehud.debug == 1 then
    print("Debugging mode: ON")
  else
    print("Debugging mode: OFF")
  end
end

function debug(message)
  if spacehud.debug == 1 then
    print(message)
  end
end

function dumpShips()
  print("Ships:")
  display(spacehud.ships)
  print("\nShip_Candidates:")
  display(spacehud.ship_candidates)
  print("\nMy_Coordinates")
  display(spacehud.my_ship)
end

function clearShips()
  debug("Clearing ships..")
  spacehud.ships = {}
  spacehud.ship_candidates = {}
  updateHud()
end

function addShip(ship)
  debug("addShip fired")
  spacehud.ships[ship.name] = {}
  spacehud.ships[ship.name].name = ship.name or "?"
  spacehud.ships[ship.name].type = ship.type or "?"
  spacehud.ships[ship.name].x = ship.x or "?"
  spacehud.ships[ship.name].y = ship.y or "?"
  spacehud.ships[ship.name].z = ship.z or "?"
  spacehud.ships[ship.name].proximity = ship.proximity or "?"
  spacehud.ships[ship.name].position = ship.position or "?"
  spacehud.ships[ship.name].velocity = ship.velocity or "?"
  spacehud.ships[ship.name].incoming = ship.incoming or nil
end
  
function removeShip(ship)
  debug("removeShip:"..ship)
  if spacehud.ships[ship] ~= nil then
    spacehud.ships[ship] = nil
  end
  updateHud()
end

function updateShip(ship)
    debug("Calling updateShip")
    for attribute in pairs(ship) do
      debug(attribute..": "..ship[attribute])
      spacehud.ships[ship.name][attribute] = ship[attribute]
    end
end

function lookupShip(ship)
  if spacehud.ship_candidates[ship] == nil then
    spacehud.ship_candidates[ship] = {}
  end 
end

--Basically we compare the last full radar capture against our current data.
--if something exists in spacehud.ships already, but it's not in spacehud.ship_candidates, then
--that means it wasn't in the last scan and it should be removed.
function checkShips()
  debug("checkShips fired")
  -- Premptively clear projectiles, since they are not uniquely identified
  -- and will not update/remove properly as a result.
  if next(spacehud.ships) then
    for ship in pairs(spacehud.ships) do
      if string.find(spacehud.ships[ship].type, "Projectile") then
        debug("Object is a projectile")
        removeShip(ship)
      end
    end
  end
  if next(spacehud.ship_candidates) then
    for ship_candidate in pairs(spacehud.ship_candidates) do
      debug("Ship candidate:"..ship_candidate)
      if spacehud.ships[ship_candidate] == nil then
        addShip(spacehud.ship_candidates[ship_candidate])
      elseif spacehud.ships[ship_candidate] ~= nil then
        if spacehud.ship_candidates[ship_candidate].x ~= nil and spacehud.ships[ship_candidate].x ~="?" then
          if tonumber(spacehud.ship_candidates[ship_candidate].x) &gt; tonumber(spacehud.ships[spacehud.ship_candidates[ship_candidate].name].x) then
            spacehud.ship_candidates[ship_candidate].x_diff = "+"
          elseif tonumber(spacehud.ship_candidates[ship_candidate].x) &lt; tonumber(spacehud.ships[spacehud.ship_candidates[ship_candidate].name].x) then
            spacehud.ship_candidates[ship_candidate].x_diff = "-"
          elseif spacehud.ships[ship_candidate].x_diff ~= nil then
            spacehud.ships[ship_candidate].x_diff = nil
          end
          if tonumber(spacehud.ship_candidates[ship_candidate].y) &gt; tonumber(spacehud.ships[spacehud.ship_candidates[ship_candidate].name].y) then
            spacehud.ship_candidates[ship_candidate].y_diff = "+"
          elseif tonumber(spacehud.ship_candidates[ship_candidate].y) &lt; tonumber(spacehud.ships[spacehud.ship_candidates[ship_candidate].name].y) then
            spacehud.ship_candidates[ship_candidate].y_diff = "-"
          elseif spacehud.ships[ship_candidate].y_diff ~= nil then
            spacehud.ships[ship_candidate].y_diff = nil
          end
          if tonumber(spacehud.ship_candidates[ship_candidate].z) &gt; tonumber(spacehud.ships[spacehud.ship_candidates[ship_candidate].name].z) then
            spacehud.ship_candidates[ship_candidate].z_diff = "+"
          elseif tonumber(spacehud.ship_candidates[ship_candidate].z) &lt; tonumber(spacehud.ships[spacehud.ship_candidates[ship_candidate].name].z) then
            spacehud.ship_candidates[ship_candidate].z_diff = "-"
          elseif spacehud.ships[ship_candidate].z_diff ~= nil then
            spacehud.ships[ship_candidate].z_diff = nil
          end
        else
        end
        updateShip(spacehud.ship_candidates[ship_candidate])
      end
      for ship in pairs(spacehud.ships) do
        if spacehud.ship_candidates[spacehud.ships[ship].name] == nil then
          removeShip(spacehud.ships[ship].name)
        end
      end
    end
  else
    clearShips()
    updateHud()
  end
  debug("Exiting checkShips")
  spacehud.ship_candidates = {}
end

function triggerShipRadar()
  debug("triggerShipRadar")
  lookupShip(matches.ship_name)
  spacehud.ship_candidates[matches.ship_name].type = matches.ship_type
  spacehud.ship_candidates[matches.ship_name].name = matches.ship_name
  spacehud.ship_candidates[matches.ship_name].x = matches.ship_x
  spacehud.ship_candidates[matches.ship_name].y = matches.ship_y
  spacehud.ship_candidates[matches.ship_name].z = matches.ship_z
end

function getProjectileName (projectile)
  debug("getProjectileName")
  if projectile == "A Heavy Rocket" then
    rocket_count = rocket_count + 1
    projectile_count = rocket_count
  elseif projectile == "A Concussion missile" then
    missile_count = missile_count + 1
    projectile_count = missile_count
  elseif projectile == "A Torpedo" then
    torpedo_count = torpedo_count + 1
    projectile_count = torpedo_count
  end
  projectile_name = projectile..projectile_count
  return projectile_name
end

function triggerProjectileRadar()
  debug("triggerProjectileRadar")
  projectile_name = getProjectileName(matches.ship_name)
  lookupShip(projectile_name)
  spacehud.ship_candidates[projectile_name].type = "Projectile"
  spacehud.ship_candidates[projectile_name].name = projectile_name
  spacehud.ship_candidates[projectile_name].x = matches.ship_x
  spacehud.ship_candidates[projectile_name].y = matches.ship_y
  spacehud.ship_candidates[projectile_name].z = matches.ship_z
  if matches.incoming == " (Incoming)" then
    spacehud.ship_candidates[projectile_name].type = spacehud.ship_candidates[projectile_name].type..matches.incoming
    spacehud.ship_candidates[projectile_name].incoming = 1
  end
end

function triggerProjectileProximity()
  debug("triggerProjectileProximity")
  projectile_name = getProjectileName(matches.ship_name)
  lookupShip(projectile_name)
  spacehud.ship_candidates[projectile_name].type = "Projectile"
  spacehud.ship_candidates[projectile_name].name = projectile_name
  spacehud.ship_candidates[projectile_name].proximity = matches.ship_proximity
  if matches.incoming == " (Incoming)" then
    spacehud.ship_candidates[projectile_name].type = spacehud.ship_candidates[projectile_name].type..matches.incoming
    spacehud.ship_candidates[projectile_name].incoming = 1
  end
end

function triggerFleetRadar()
  debug("triggerFleetRadar")
  lookupShip(matches.ship_name)
  spacehud.ship_candidates[matches.ship_name].type = matches.ship_type
  spacehud.ship_candidates[matches.ship_name].name = matches.ship_name
  spacehud.ship_candidates[matches.ship_name].x = matches.ship_x
  spacehud.ship_candidates[matches.ship_name].y = matches.ship_y
  spacehud.ship_candidates[matches.ship_name].z = matches.ship_z
  spacehud.ship_candidates[matches.ship_name].position = matches.ship_position
  --Check to see if they were part of a battlegroup
  if matches.ship_leader_name ~= '' then
    spacehud.ship_candidates[matches.ship_name].leader_type = matches.ship_leader_type
    spacehud.ship_candidates[matches.ship_name].leader_name = matches.ship_leader_name
  end
end
  
function triggerShipProximity()
  debug("triggerShipProximity")
  lookupShip(matches.ship_name)
  spacehud.ship_candidates[matches.ship_name].type = matches.ship_type
  spacehud.ship_candidates[matches.ship_name].name = matches.ship_name
  spacehud.ship_candidates[matches.ship_name].proximity = matches.ship_proximity
end
  
function triggerShipVelocity()
  debug("triggerShipVelocity")
  lookupShip(matches.ship_name)
  spacehud.ship_candidates[matches.ship_name].type = matches.ship_type
  spacehud.ship_candidates[matches.ship_name].name = matches.ship_name
  spacehud.ship_candidates[matches.ship_name].velocity = matches.ship_velocity
end

function triggerProjectileVelocity()
  debug("triggerProjectileVelocity")
  projectile_name = getProjectileName(matches.ship_name)
  lookupShip(projectile_name)
  spacehud.ship_candidates[projectile_name].type = "Projectile"
  spacehud.ship_candidates[projectile_name].name = projectile_name
  spacehud.ship_candidates[projectile_name].velocity = matches.ship_velocity
  if matches.incoming == " (Incoming)" then
    spacehud.ship_candidates[projectile_name].type = spacehud.ship_candidates[projectile_name].type..matches.incoming
    spacehud.ship_candidates[projectile_name].incoming = 1
  end
end

--It just so happens that this string ends multiple space recon commands
--so we're going to use it as something of an "end case" for the capture.
function triggerMyCoordinates()
  debug("triggerMyCoordinates")
  spacehud.my_ship.x = matches.my_x
  spacehud.my_ship.y = matches.my_y
  spacehud.my_ship.z = matches.my_z
  rocket_count = 0
  missile_count = 0
  torpedo_count = 0
  checkShips()
  updateHud()
end

function triggerShipLaunch()
  debug("triggerShipLaunch")
  local ship = {}
  ship.type = matches.ship_type
  ship.name = matches.ship_name
  ship.x = matches.ship_x
  ship.y = matches.ship_y
  ship.z = matches.ship_z
  addShip(ship)
  updateHud()
end

function triggerShipEntersSystem()
  debug("triggerShipEntersSystem")
  local ship = {}
  ship.type = matches.ship_type
  ship.name = matches.ship_name
  ship.x = matches.ship_x
  ship.y = matches.ship_y
  ship.z = matches.ship_z
  addShip(ship)
  updateHud()
end

function triggerShipLand()
  debug("triggerShipLand")
  removeShip(matches.ship_name)
end

function triggerShipLeavesSystem()
  debug("triggerShipLeavesSystem")
  removeShip(matches.ship_name)
end

function triggerShipExplodes()
  debug("triggerShipExplodes")
  removeShip(matches.ship_name)
end

function triggerShipTractored()
  debug("triggerShipTractored")
  removeShip(matches.ship_name)
end

function triggerShipHangarLaunch()
    debug("triggerShipHangarLaunch")
    local ship = {}
    ship.type = matches.ship_type
    ship.name = matches.ship_name
    ship.x = matches.ship_x
    ship.y = matches.ship_y
    ship.z = matches.ship_z
    addShip(ship)
    updateHud()
end

function triggerShipHangarLand()
  debug("triggerShipHangarLand")
  removeShip(matches.ship_name)
end

function triggerShipDisappears()
    debug("triggerShipDisappears")
    removeShip(matches.ship_name)
end

function triggerEnterHyperspace()
    debug("triggerEnterHyperspace")
end

function triggerExitHyperspace()
    debug("triggerExitHyperspace")
    --clearShips()
    updateHud()
end

function triggerMyShipLands()
    debug("triggerMyShipLand")
    spacehud.container:hide()
end

function triggerMyShipLaunch()
    debug("triggerMyShipLaunch")
    spacehud.container:show()
end

function triggerMyShipReadout()
    debug("triggerMyShipReadout")
    spacehud.my_ship.x = matches.ship_x
    spacehud.my_ship.y = matches.ship_y
    spacehud.my_ship.z = matches.ship_z
end

function triggerProximityAlert()
    debug("triggerProximityAlert")
    local ship = {}
    ship.name = matches.ship_name
    ship.type = matches.ship_type
    ship.x = matches.ship_x
    ship.y = matches.ship_y
    ship.z = matches.ship_z
    if spacehud.ships[matches.ship_name] == nil then
      addShip(ship)
    else
      updateShip(ship)
    end
    updateHud()
end

function sortShipType()
  spacehud.sort_by = "type"
  spacehud.sort_by_invert = spacehud.sort_by_invert * -1
  debug("Sort by type")
  updateHud()
end

function sortShipName()
  spacehud.sort_by = "name"
  spacehud.sort_by_invert = spacehud.sort_by_invert * -1
  debug("Sort by name")
  updateHud()
end

function sortShipProximity()
  spacehud.sort_by = "proximity"
  spacehud.sort_by_invert = spacehud.sort_by_invert * -1
  debug("Sort by proximity")
  updateHud()
end

function sortShipPosition()
  spacehud.sort_by = "position"
  spacehud.sort_by_invert = spacehud.sort_by_invert * -1
  debug("Sort by position")
  updateHud()
end

function sortShipVelocity()
  spacehud.sort_by = "velocity"
  spacehud.sort_by_invert = spacehud.sort_by_invert * -1
  debug("Sort by velocity")
  updateHud()
end

function sortShips()
  local sorted_ships = {}
  if spacehud.sort_by== "proximity" then
    for _,v in pairs(spacehud.ships) do
      table.insert(sorted_ships, v)
    end
    table.sort(sorted_ships, function(a,b)
      if spacehud.sort_by_invert &lt; 0 then
        if a.proximity ~= '?' and b.proximity ~= '?' then
          return tonumber(a.proximity) &lt; tonumber(b.proximity)
        else
          return a.proximity &lt; b.proximity
        end
      else
        if a.proximity ~= '?' and b.proximity ~= '?' then
          return tonumber(a.proximity) &gt; tonumber(b.proximity)
        else
          return a.proximity &gt; b.proximity
        end
      end
    end)
  elseif spacehud.sort_by== "name" then
    for _,v in pairs(spacehud.ships) do
      table.insert(sorted_ships, v)
    end
    table.sort(sorted_ships, function(a,b)
      if spacehud.sort_by_invert &lt; 0 then
        return a.name &lt; b.name
      else
        return a.name &gt; b.name
      end
    end)
  elseif spacehud.sort_by== "position" then
    for _,v in pairs(spacehud.ships) do
      table.insert(sorted_ships, v)
    end
    table.sort(sorted_ships, function(a,b)
      if spacehud.sort_by_invert &lt; 0 then
        return a.position &lt; b.position
      else
        return a.position &gt; b.position
      end
    end)
  elseif spacehud.sort_by== "velocity" then
    for _,v in pairs(spacehud.ships) do
        table.insert(sorted_ships, v)
    end
    table.sort(sorted_ships, function(a,b)
      if spacehud.sort_by_invert &lt; 0 then
        if a.velocity ~= '?' and b.velocity ~= '?' then
          return tonumber(a.velocity) &lt; tonumber(b.velocity)
        else
          return a.velocity &lt; b.velocity
        end
        else
        if a.velocity ~= '?' and b.velocity ~= '?' then
          return tonumber(a.velocity) &gt; tonumber(b.velocity)
        else
          return a.velocity &gt; b.velocity
        end
      end
    end)
  else
    for _,v in pairs(spacehud.ships) do
      table.insert(sorted_ships, v)
    end
    table.sort(sorted_ships, function(a,b)
      if spacehud.sort_by_invert &lt; 0 then
        return a.type &lt; b.type
      else
        return a.type &gt; b.type
      end
    end)
  end
  return sorted_ships
end

function updateHud()
  debug("updateHud")
  local TableMaker = require("SpaceHud/ftext").TableMaker
  spacehud.table = TableMaker:new({
    formatType = "c",
    printHeaders = false,
    headCharacter = "",
    footCharacter = "",
    edgeCharacter = "",
    --frameColor = "white",
    rowSeparator = "-",
    separator = "|",
    --separatorColor = "grey",
    autoEcho = true,
    autoEchoConsole = "spacehud_console",
    autoClear = true,
    allowPopups = true,
    separateRows = true,
    title = "SpaceHud",
    titleColor = "red",
    printTitle = false
  })
  spacehud.table:addColumn({name = "type", width = spacehud.type_width, textColor = "&lt;cyan&gt;"})
  spacehud.table:addColumn({name = "name", width = spacehud.name_width, textColor = "&lt;cyan&gt;"})
  spacehud.table:addColumn({name = "x", width = spacehud.xyz_width, textColor = "&lt;red&gt;"})
  spacehud.table:addColumn({name = "y", width = spacehud.xyz_width, textColor = "&lt;red&gt;"})
  spacehud.table:addColumn({name = "z", width = spacehud.xyz_width, textColor = "&lt;red&gt;"})
  spacehud.table:addColumn({name = "prox", width = spacehud.proximity_width, textColor = "&lt;yellow&gt;"})
  spacehud.table:addColumn({name = "pos", width = spacehud.position_width, textColor = "&lt;orange&gt;"})
  spacehud.table:addColumn({name = "vel", width = spacehud.velocity_width, textColor = "&lt;purple&gt;"})
  spacehud.table:addRow({
    {"type", [[sortShipType()]], "sort by type"},
    {"name", [[sortShipName()]], "sort by name"},
    "x",
    "y",
    "z",
    {"prox", [[sortShipProximity()]], "sort by proximity"},
    {"pos", [[sortShipPosition()]], "sort by position"},
    {"vel", [[sortShipVelocity()]], "sort by velocity"}
  })
  local sorted_ships = sortShips()
  for ship in pairs(sorted_ships) do
    x_diff = sorted_ships[ship].x_diff or ""
    y_diff = sorted_ships[ship].y_diff or ""
    z_diff = sorted_ships[ship].z_diff or ""
    if string.find(sorted_ships[ship].type, "Projectile") then
      sorted_ships[ship].name = string.gsub(sorted_ships[ship].name, "(%d+)", "")
      if sorted_ships[ship].incoming == 1 then
        sorted_ships[ship].type = "&lt;red&gt;"..sorted_ships[ship].type
        sorted_ships[ship].name = "&lt;red&gt;"..sorted_ships[ship].name
      else
        sorted_ships[ship].type = "&lt;white&gt;"..sorted_ships[ship].type
        sorted_ships[ship].name = "&lt;white&gt;"..sorted_ships[ship].name
      end
    end
    local statusShip = function()
      send("status \""..sorted_ships[ship].type.." '"..sorted_ships[ship].name.."'\"")
    end
    local infoShip = function()
      send("info \""..sorted_ships[ship].type.." '"..sorted_ships[ship].name.."'\"")
    end
    local locateShip = function()
      send("locateship \""..sorted_ships[ship].type.." '"..sorted_ships[ship].name.."'\"")
    end
    local targetShip = function()
      send("target "..sorted_ships[ship].name)
    end
    local calculateShip = function ()
      send("calculate local "..sorted_ships[ship].x.." "..sorted_ships[ship].y.." "..sorted_ships[ship].z)
    end
    spacehud.table:addRow({
      sorted_ships[ship].type,
      {sorted_ships[ship].name, 
        {
          statusShip,
          infoShip,
          locateShip,
          targetShip,
          calculateShip
        }, 
        {"Status", "Info", "Locate", "Target", "Calculate to"}
      },
      sorted_ships[ship].x.." "..x_diff,
      sorted_ships[ship].y.." "..y_diff,
      sorted_ships[ship].z.." "..z_diff,
      sorted_ships[ship].proximity,
      string.sub(sorted_ships[ship].position, 1, 3),
      sorted_ships[ship].velocity
    })
  end
  spacehud.table:assemble()
end</script>
			<eventHandlerList />
		</Script>
		<Script isActive="yes" isFolder="no">
			<name>spacehud</name>
			<packageName></packageName>
			<script>spacehud = spacehud or {}
spacehud.debug = spacehud.debug or 0
spacehud.ships = spacehud.ships or {}
spacehud.ship_candidates = spacehud.ship_candidates or {}
spacehud.my_ship = spacehud.my_ship or {}
spacehud.input = spacehud.input or {}
spacehud.label = spacehud.label or {}
spacehud.sort_by = spacehud.sort_by or "proximity"
spacehud.sort_by_invert = spacehud.sort_by_invert or 1
spacehud.type_width = spacehud.type_width or 35
spacehud.name_width = spacehud.name_width or 25
spacehud.xyz_width = spacehud.xyz_width or 10
spacehud.proximity_width = spacehud.proximity_width or 7
spacehud.position_width = spacehud.position_width or 5
spacehud.velocity_width = spacehud.velocity_width or 7
spacehud.font_size = spacehud.font_size or 8
spacehud.menu = {}
spacehud.menu.adjLabelstyle = [[
  border: 1px solid rgb(32,34,37);
  background-color: rgb(54, 57, 63);
]]
spacehud.menu.buttonStyle = [[
  QLabel{ background-color: rgba(32,34,37,100%);}
  QLabel::hover{ background-color: rgba(40,43,46,100%);}
]]
spacehud.menu.buttonFontSize = 10

spacehud.button_style =[[
  QLabel{ border-radius: 25px; background-color: rgba(41,43,47,100%)}
  QLabel::hover{ background-color: rgba(51,54,60,100%);}
  color: rgb(216,217,218) 
]]
spacehud.input_style =[[
  QPlainTextEdit{
    border: 1px solid rgb(32,34,37);
    background-color: rgb(64,68,75);
    font: bold 12pt "Arial";
    color: rgb(255,255,255);
  }
]]
spacehud.label_style =[[
  border: 1px solid rgb(32,34,37);
  background-color: rgb(47,49,54);
  font: bold 20pt "Arial";
  color: rgb(0,0,0);
  qproperty-alignment: 'AlignVCenter|AlignRight';
]]

spacehud.container = Adjustable.Container:new({
  name="spacehud_container",
  titleTxtColor = "white",
  titleText = "SpaceHud",
  width = "45%",
  height = "50%",
  adjLabelstyle = spacehud.menu.adjLabelstyle,
  buttonstyle = spacehud.menu.buttonStyle,
  buttonFontSize = 10,
  buttonsize = 20,
  padding = 10
})

spacehud.console = Geyser.MiniConsole:new({
  name="spacehud_console",
  x="0%", y="3%",
  autoWrap = true,
  color = "black",
  scrollBar = true,
  fontSize = spacehud.font_size,
  width="100%", height="97%",
}, spacehud.container)

spacehud.settings_button = Geyser.Label:new({
  name="settings_button",
  x="3px", y="-29px", width="75px", height="25px",
  message="&lt;center&gt;Settings&lt;/center&gt;"
}, spacehud.container)
spacehud.settings_button:setStyleSheet(spacehud.button_style)
spacehud.settings_button:setClickCallback("clickSettings")

spacehud.settings_container = Adjustable.Container:new2({
  x="33%", y="20%",
  name = "spacehud_settings",
  --width = "35%", height = "35%",
  width = "230px", height = "250px",
  adjLabelstyle = spacehud.menu.adjLabelstyle,
  buttonstyle = spacehud.menu.buttonStyle,
  buttonFontSize = 10,
  buttonsize = 20,
  titleText = "",
  titleTxtColor = "white",
  padding = 10
}, spacehud.container)

spacehud.save_button = Geyser.Label:new({
  name="save_button",
  x="33%", y="-25px", width="50px", height="25px",
  message="&lt;center&gt;Save&lt;/center&gt;"
}, spacehud.settings_container)
spacehud.save_button:setClickCallback("clickSave")
spacehud.save_button:setStyleSheet(spacehud.button_style)

spacehud.label.type = Geyser.Label:new({
  name = "label_type",
  x = 0, y=0, width="150px", height="25px",
  message = "Type width:"
}, spacehud.settings_container)
spacehud.label.type:setStyleSheet(spacehud.label_style)

spacehud.input.type = Geyser.CommandLine:new({
  name = "input_type",
  x = "150px", y=0, width="50px", height = "25px"
}, spacehud.settings_container)
spacehud.input.type:setStyleSheet(spacehud.input_style)

spacehud.label.name = Geyser.Label:new({
  name = "label_name",
  x = 0, y="25px", width="150px", height="25px",
  message = "Name width:"
}, spacehud.settings_container)
spacehud.label.name:setStyleSheet(spacehud.label_style)

spacehud.input.name = Geyser.CommandLine:new({
  name = "input_name",
  x="150px", y="25px", width="50px", height="25px"
}, spacehud.settings_container)
spacehud.input.name:setStyleSheet(spacehud.input_style)

spacehud.label.xyz = Geyser.Label:new({
  name = "label_xyz",
  x = 0, y="50px", width="150px", height="25px",
  message ="Xyz width:"
}, spacehud.settings_container)
spacehud.label.xyz:setStyleSheet(spacehud.label_style)

spacehud.input.xyz = Geyser.CommandLine:new({
  name = "input_xyz",
  x="150px", y="50px", width="50px", height="25px"
}, spacehud.settings_container)
spacehud.input.xyz:setStyleSheet(spacehud.input_style)

spacehud.label.proximity = Geyser.Label:new({
  name = "label_proximity",
  x = 0, y="75px", width="150px", height="25px",
  message ="Proximity width:"
}, spacehud.settings_container)
spacehud.label.proximity:setStyleSheet(spacehud.label_style)

spacehud.input.proximity = Geyser.CommandLine:new({
  name = "input_proximity",
  x="150px", y="75px", width="50px", height="25px"
}, spacehud.settings_container)
spacehud.input.proximity:setStyleSheet(spacehud.input_style)

spacehud.label.position = Geyser.Label:new({
  name = "label_position",
  x = 0, y="100px", width="150px", height="25px",
  message ="Position width:"
}, spacehud.settings_container)
spacehud.label.position:setStyleSheet(spacehud.label_style)

spacehud.input.position = Geyser.CommandLine:new({
  name = "input_position",
  x="150px", y="100px", width="50px", height="25px"
}, spacehud.settings_container)
spacehud.input.position:setStyleSheet(spacehud.input_style)

spacehud.label.velocity = Geyser.Label:new({
  name = "label_velocity",
  x = 0, y="125px", width="150px", height="25px",
  message ="Velocity width:"
}, spacehud.settings_container)
spacehud.label.velocity:setStyleSheet(spacehud.label_style)

spacehud.input.velocity = Geyser.CommandLine:new({
  name = "input_velocity",
  x="150px", y="125px", width="50px", height="25px"
}, spacehud.settings_container)
spacehud.input.velocity:setStyleSheet(spacehud.input_style)

spacehud.settings_container:hide()

updateHud()
spacehud.container:show()</script>
			<eventHandlerList />
		</Script>
	</ScriptPackage>
	<KeyPackage />
	<VariablePackage>
		<HiddenVariables />
	</VariablePackage>
</MudletPackage>
